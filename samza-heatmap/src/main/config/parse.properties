# Task
task.class=com.lambdanow.heatmap.task.Parse
task.inputs=kafka.heatmapchannel

# task.opts=-agentlib:jdwp=transport=dt_socket,address=localhost:9009,server=y,suspend=y

# YARN
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=parse-processor
yarn.package.path=hdfs://ip-172-31-51-13.ec2.internal:8020/user/ubuntu/lambdanow-heatmap-1.0-SNAPSHOT-dist.tar.gz

schema.registry.remote=true
schema.registry.url=http://ip-172-31-51-226.ec2.internal:8080/1/schemas/
schema.registry.token=fd3117c961

# Serializers
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.avro.class=com.lambdanow.heatmap.serializer.AvroRecordFactory

systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.key.serde=string
systems.kafka.samza.msg.serde=avro
systems.kafka.consumer.zookeeper.connect=ip-172-31-58-114.ec2.internal:2181,ip-172-31-58-115.ec2.internal:2181,ip-172-31-58-116.ec2.internal:2181
systems.kafka.producer.bootstrap.servers=ip-172-31-58-114.ec2.internal:9092,ip-172-31-58-115.ec2.internal:9092,ip-172-31-58-116.ec2.internal:9092

