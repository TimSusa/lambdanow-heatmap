# Task
task.class=com.lambdanow.heatmap.task.EventProcessorTask
task.inputs=kafka.heatmapchannel5
task.window.ms=5000

# data-api-public-dns
task.mongo.host=ec2-52-91-174-174.compute-1.amazonaws.com
task.mongo.port=27017
task.mongo.db=heatmapDb
task.mongo.collection=heatmapCollection

# YARN
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=events-processor
# hdfs://NAMENODE-NODE-INTERNAL-DNS-NAME:8020/user/ubuntu/*-dist.tar.gz
yarn.package.path=hdfs://ip-172-31-56-48.ec2.internal:8020/user/ubuntu/lambdanow-heatmap-1.0-SNAPSHOT-dist.tar.gz

schema.registry.remote=true
# http://DATA-API-INTERNAL-DNS-NAME:8080/1/schemas/
schema.registry.url=http://ip-172-31-58-92.ec2.internal:8080/1/schemas/
schema.registry.token=57199f558b

# Serializers
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.avro.class=com.lambdanow.heatmap.serializer.AvroRecordFactory

systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.key.serde=string
systems.kafka.samza.msg.serde=avro
# systems.kafka.consumer.zookeeper.connect=<KAFKA1-NODE-INTERNAL-DNS-NAME>:2181,<KAFKA2-NODE-INTERNAL-DNS-NAME>:2181,<KAFKA3-NODE-INTERNAL-DNS-NAME>:2181
# systems.kafka.producer.bootstrap.servers=<KAFKA1-NODE-INTERNAL-DNS-NAME>:9092,<KAFKA2-NODE-INTERNAL-DNS-NAME>:9092,<KAFKA3-NODE-INTERNAL-DNS-NAME>:9092
systems.kafka.consumer.zookeeper.connect=ip-172-31-54-201.ec2.internal:2181,ip-172-31-54-199.ec2.internal:2181,ip-172-31-54-200.ec2.internal:2181
systems.kafka.producer.bootstrap.servers=ip-172-31-54-201.ec2.internal:9092,ip-172-31-54-199.ec2.internal:9092,ip-172-31-54-200.ec2.internal:9092
